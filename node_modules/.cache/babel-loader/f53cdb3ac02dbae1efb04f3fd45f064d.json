{"remainingRequest":"/Users/apple/vue_3/node_modules/thread-loader/dist/cjs.js!/Users/apple/vue_3/node_modules/babel-loader/lib/index.js!/Users/apple/vue_3/node_modules/eslint-loader/index.js??ref--13-0!/Users/apple/vue_3/src/utils/http.js","dependencies":[{"path":"/Users/apple/vue_3/src/utils/http.js","mtime":1542770059000},{"path":"/Users/apple/vue_3/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/vue_3/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/vue_3/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/apple/vue_3/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport axios from 'axios';\nimport { Message, MessageBox } from 'element-ui';\nvar instance = axios.create({\n  baseURL: process.env.DOMAIN\n});\ninstance.defaults.transformRequest = [function (data) {\n  return JSON.stringify(data);\n}];\n\ninstance.defaults.validateStatus = function (status) {\n  return true;\n};\n\ninstance.interceptors.request.use(function (config) {\n  config.headers.Accept = 'application/json';\n  config.headers['Content-Type'] = 'application/json';\n  return config;\n}, function (err) {\n  return Promise.reject(err);\n}); // 添加响应拦截器\n\ninstance.interceptors.response.use(function (response) {\n  if (response.status === 200) {\n    return Promise.resolve(response);\n  } else {\n    return Promise.reject(response);\n  }\n});\nvar requestMethod = ['get', 'post', 'delete', 'put', 'patch', 'update'];\nvar requester = {};\nrequestMethod.forEach(function (method) {\n  requester[method] = function () {\n    var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return new Promise(function (resolve, reject) {\n      instance[method](url, data, config).then(function (response) {\n        if (response.data != null && response.data.errorCode != null && response.data.errorCode != 0 && response.data.showCode == 0) {\n          Message.error(response.data.errorMessageString);\n          return false;\n        } else if (response.data != null && response.data.errorCode != null && response.data.errorCode != 0 && response.data.showCode != 0) {\n          MessageBox.alert(response.data.errorMessageString, '提示', {\n            confirmButtonText: '确定'\n          });\n          return false;\n        } else {\n          resolve(response.data);\n        }\n      }).catch(function (response) {\n        Message.error('服务器错误');\n        reject(response);\n      });\n    });\n  };\n});\nexport default requester;",{"version":3,"sources":["/Users/apple/vue_3/src/utils/http.js"],"names":["axios","Message","MessageBox","instance","create","baseURL","process","env","DOMAIN","defaults","transformRequest","data","JSON","stringify","validateStatus","status","interceptors","request","use","config","headers","Accept","err","Promise","reject","response","resolve","requestMethod","requester","forEach","method","url","then","errorCode","showCode","error","errorMessageString","alert","confirmButtonText","catch"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { Message,MessageBox } from 'element-ui';\nlet instance = axios.create({\n    baseURL: process.env.DOMAIN,\n})\ninstance.defaults.transformRequest = [function (data) {\n    return JSON.stringify(data)\n}]\ninstance.defaults.validateStatus = function (status) {\n    return true\n}\ninstance.interceptors.request.use(config => {\n    config.headers.Accept = 'application/json'\n    config.headers['Content-Type'] = 'application/json'\n    return config\n}, err => {\n    return Promise.reject(err)\n})\n// 添加响应拦截器\ninstance.interceptors.response.use(response => {\n    if (response.status === 200) {\n        return Promise.resolve(response)\n    } else {\n        return Promise.reject(response)\n    }\n})\n\nlet requestMethod = ['get', 'post', 'delete', 'put', 'patch', 'update']\nlet requester = {}\nrequestMethod.forEach((method) => {\n    requester[method] = function (url = '', data = {}, config = {}) {\n        return new Promise((resolve, reject) => {\n            instance[method](url, data, config).then((response) => {\n\n                if (response.data != null && response.data.errorCode != null && response.data.errorCode != 0 && response.data.showCode == 0) {\n                    Message.error(response.data.errorMessageString);\n                    return  false\n                } else if (response.data != null && response.data.errorCode != null && response.data.errorCode != 0 && response.data.showCode != 0) {\n                    MessageBox.alert(response.data.errorMessageString, '提示', {confirmButtonText: '确定'  });\n                    return  false\n                }else {\n                    resolve(response.data)\n                }\n\n            }).catch((response) => {\n                Message.error('服务器错误'  );\n                reject(response)\n            })\n        })\n    }\n})\n\nexport default requester\n"]}]}