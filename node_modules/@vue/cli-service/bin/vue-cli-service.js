#!/usr/bin/env node


/*Service {
    initialized: false,
        context: '/Users/apple/vue_3',
        inlineOptions: undefined,
        webpackChainFns: [],
        webpackRawConfigFns: [],
        devServerConfigFns: [],
        commands: {},
        pkgContext: '/Users/apple/vue_3',
         pkg: { 
            name: 'vue_3',
            version: '0.1.0',
            private: true,
            scripts:
            { serve: 'vue-cli-service serve',
                build: 'vue-cli-service build',
                lint: 'vue-cli-service lint',
                dev_build: 'vue-cli-service build --mode   dev --language=cn -n5' },
            dependencies: { vue: '^2.5.17' },
            devDependencies:
            { '@vue/cli-plugin-babel': '^3.1.1',
                '@vue/cli-plugin-eslint': '^3.1.1',
                '@vue/cli-service': '^3.1.1',
                'babel-eslint': '^10.0.1',
                eslint: '^5.8.0',
                'eslint-plugin-vue': '^5.0.0-0',
                'vue-template-compiler': '^2.5.17' },
            eslintConfig:
            { root: true,
                env: [Object],
                extends: [Array],
                rules: {},
                parserOptions: [Object] },
                postcss: { plugins: [Object] },
                 browserslist: [ '> 1%', 'last 2 versions', 'not ie <= 8' ],
                readme: 'ERROR: No README data found!',
                _id: 'vue_3@0.1.0'
             },
         plugins: [ 
            { id: 'built-in:commands/serve', apply: [Function] },
            { id: 'built-in:commands/build', apply: [Function] },
            { id: 'built-in:commands/inspect', apply: [Function] },
            { id: 'built-in:commands/help', apply: [Function] },
            { id: 'built-in:config/base', apply: [Function] },
            { id: 'built-in:config/css', apply: [Function] },
            { id: 'built-in:config/dev', apply: [Function] },
            { id: 'built-in:config/prod', apply: [Function] },
            { id: 'built-in:config/app', apply: [Function] },
            { id: '@vue/cli-plugin-babel', apply: [Function] },
            { id: '@vue/cli-plugin-eslint', apply: [Function] }
             ],
            modes:{ 
              serve: 'development',
              build: 'production',
              inspect: 'development' 
              } 
    }*/


//console.log(process.argv)
//console.log(rawArgv)
/*process.argv = [ '/usr/local/bin/node',
    '/Users/apple/vue_3/node_modules/.bin/vue-cli-service',
    'serve' ]
    slice(2)=['serve']
    */
/*const startParams = require('minimist')(process.argv.slice(2),{
    string : ['port', 'language' ],//key=port|language返回的就是value的字符串
    boolean: ['debug'],//debug参数的value有就对应ture,无就对应false
    alias: {
        port: 'p',//port在解析的时候，会对应返回的是p
        language: 'l',
    },
    default: {
        NODE_ENV: 'dev'//默认设置的值
    }
})
console.log(process.argv.slice(2))
console.log("----------------------");
console.log(startParams);
启动命令：
 D:\StudeyCode\myStudy\myappWx> node .\src\config\index.js --debug=Enble --out=22 --port=3030 --language=cn
 输出结果
[ '--debug=Enble', '--out=22', '--port=3030', '--language=cn' ]
----------------------
{ _: [],
  debug: 'Enble',
  out: 22,
  port: '3030',
  p: '3030',
  language: 'cn',
  l: 'cn',
  NODE_ENV: 'dev' }
---------------------
作者：swimming_in_it_ 
来源：CSDN
原文：https://blog.csdn.net/swimming_in_IT_/article/details/81103688
版权声明：本文为博主原创文章，转载请附上博文链接！
*/


//command build 或者是serve    
// args是命令行里面的参数 { _: [ 'build' ],
//   modern: false,
//   report: false,
//   'report-json': false,
//   watch: false,
//   open: false,
//   copy: false,
//   https: false,
//   verbose: false,
//   mode: 'development',
//   language: 'cn',
//   n: 5 } rawArgv 就是 [ 'build', '--mode', 'development', '--language=cn', '-n5' ]
const semver = require('semver')
const {error} = require('@vue/cli-shared-utils')
const requiredVersion = require('../package.json').engines.node

if (!semver.satisfies(process.version, requiredVersion)) {
    error(
        `You are using Node ${process.version}, but vue-cli-service ` +
        `requires Node ${requiredVersion}.\nPlease upgrade your Node version.`
    )
    process.exit(1)
}
const Service = require('../lib/Service')
const service = new Service(process.env.VUE_CLI_CONTEXT || process.cwd())
const rawArgv = process.argv.slice(2)
const args = require('minimist')(rawArgv, {
    boolean: [
        // build
        'modern',
        'report',
        'report-json',
        'watch',
        // serve
        'open',
        'copy',
        'https',
        // inspect
        'verbose'
    ]
})
//console.log(args)
const command = args._[0]

service.run(command, args, rawArgv).catch(err => {
    error(err)
    process.exit(1)
})
